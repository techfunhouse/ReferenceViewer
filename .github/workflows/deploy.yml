name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  
# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install Dependencies
        run: |
          # Install root dependencies
          npm ci
          
          # Install client and server dependencies
          cd client && npm ci
          cd ../server && npm ci
          cd ..
      
      - name: Setup Environment Variables
        run: |
          # Set up environment variables for client and server
          echo "Setting up environment variables for deployment..."
          
          # Determine correct base path and repository name
          REPO_NAME=$(echo "$GITHUB_REPOSITORY" | cut -d '/' -f 2)
          CUSTOM_DOMAIN="${{ secrets.CUSTOM_DOMAIN }}"
          
          # Determine if we're using a custom domain
          if [[ ! -z "$CUSTOM_DOMAIN" ]]; then
            echo "Using custom domain: $CUSTOM_DOMAIN"
            BASE_PATH="/"
            IS_CUSTOM_DOMAIN="true"
          else
            # GitHub repository as subdirectory
            if [[ "$REPO_NAME" != *.github.io ]]; then
              BASE_PATH="/$REPO_NAME/"
              echo "Using repository path: /$REPO_NAME/"
            else
              # User or organization GitHub Pages
              BASE_PATH="/"
              echo "Using root path for .github.io domain"
            fi
            IS_CUSTOM_DOMAIN="false"
          fi
          
          # Create client environment file for GitHub Pages
          cat > client/.env.production << EOL
          # Production environment variables for GitHub Pages deployment
          VITE_API_URL=
          VITE_GITHUB_PAGES=true
          VITE_BASE_PATH=${BASE_PATH}
          VITE_USE_CUSTOM_DOMAIN=${IS_CUSTOM_DOMAIN}
          EOL
          
          echo "Client environment variables created:"
          cat client/.env.production
          
          # Export environment variables for the build step
          echo "BASE_PATH=${BASE_PATH}" >> $GITHUB_ENV
          echo "CUSTOM_DOMAIN=${CUSTOM_DOMAIN}" >> $GITHUB_ENV
          echo "IS_CUSTOM_DOMAIN=${IS_CUSTOM_DOMAIN}" >> $GITHUB_ENV
      
      - name: Export Data for Static Deployment
        run: |
          # Ensure data directory exists
          mkdir -p data
          
          # Copy existing data files if they exist, or create minimal ones
          if [ -d "server/data" ]; then
            echo "Copying data files from server directory..."
            cp -r server/data/* data/
          else
            echo "Creating minimal data files..."
            echo "[]" > data/references.json
            echo "[]" > data/categories.json
            echo "[]" > data/tags.json
          fi
          
          # Show what files were created
          echo "Data files in data directory:"
          ls -la data/
      
      - name: Build Client
        run: |
          # Build the client with the environment variables
          cd client
          npm run build
          cd ..
      
      - name: Prepare Deployment Directory
        run: |
          # Create deployment directory
          mkdir -p deploy
          
          # Copy client build files
          cp -r client/dist/* deploy/
          
          # Add .nojekyll file to bypass Jekyll processing
          touch deploy/.nojekyll
          
          # Create data directory in deployment
          mkdir -p deploy/data
          cp data/*.json deploy/data/
          
          # Create CNAME file if custom domain is specified
          if [[ ! -z "$CUSTOM_DOMAIN" ]]; then
            echo "$CUSTOM_DOMAIN" > deploy/CNAME
            echo "Created CNAME file for $CUSTOM_DOMAIN"
          fi
      
      - name: Create 404.html for SPA Routing
        run: |
          # Create 404.html file for proper SPA routing on GitHub Pages
          cp deploy/index.html deploy/404.html
          
          # Add script to 404.html for SPA routing
          sed -i 's/<\/head>/<script>sessionStorage.setItem("redirect", window.location.pathname); window.location.href = "'"$BASE_PATH"'";<\/script><\/head>/g' deploy/404.html
      
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: deploy
          token: ${{ secrets.GITHUB_TOKEN }}
          clean: true