name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main  # Set your default branch here if it's not 'main'

permissions:
  contents: write  # This is crucial - gives permission to write to the repository

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
      
      - name: Build
        run: npm run build
        
      - name: Prepare for GitHub Pages üîß
        run: |
          # Get repository name from GitHub context
          REPO_NAME=$(echo "$GITHUB_REPOSITORY" | cut -d'/' -f2)
          echo "Using repository name: $REPO_NAME"
          
          # Create .nojekyll file
          touch dist/public/.nojekyll
          
          # Add base tag and fix script to index.html
          ORIGINAL_INDEX="dist/public/index.html"
          
          # Insert base tag for GitHub Pages and spa-github-pages script
          sed -i "s|<head>|<head>\n    <base href=\"/${REPO_NAME}/\">\n    <script type=\"text/javascript\">\n      // Single Page Apps for GitHub Pages\n      // MIT License - https://github.com/rafgraph/spa-github-pages\n      (function(l) {\n        if (l.search[1] === '/' ) {\n          var decoded = l.search.slice(1).split('&').map(function(s) { \n            return s.replace(/~and~/g, '&')\n          }).join('?');\n          window.history.replaceState(null, null,\n              l.pathname.slice(0, -1) + decoded + l.hash\n          );\n        }\n      }(window.location))\n    </script>|" $ORIGINAL_INDEX
          
          # Create 404.html file for SPA routing
          cat > dist/public/404.html << 'EOL'
          <!DOCTYPE html>
          <html>
            <head>
              <meta charset="utf-8">
              <title>RefHub - Redirecting</title>
              <script type="text/javascript">
                // Single Page Apps for GitHub Pages
                // MIT License - https://github.com/rafgraph/spa-github-pages
                // This script takes the current url and converts the path and query
                // string into just a query string, and then redirects the browser
                // to the new url with only a query string and hash fragment
                
                // If you're creating a Project Pages site and NOT using a custom domain,
                // then set pathSegmentsToKeep to 1 (enterprise users may need to set it to > 1).
                var pathSegmentsToKeep = 1;
          
                var l = window.location;
                l.replace(
                  l.protocol + '//' + l.hostname + (l.port ? ':' + l.port : '') +
                  l.pathname.split('/').slice(0, 1 + pathSegmentsToKeep).join('/') + '/?/' +
                  l.pathname.slice(1).split('/').slice(pathSegmentsToKeep).join('/').replace(/&/g, '~and~') +
                  (l.search ? '&' + l.search.slice(1).replace(/&/g, '~and~') : '') +
                  l.hash
                );
              </script>
            </head>
            <body>
              <h1>Redirecting...</h1>
            </body>
          </html>
          EOL
          
          echo "‚úÖ GitHub Pages preparation completed successfully"
      
      - name: Deploy üöÄ
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages  # The branch the action should deploy to
          folder: dist/public  # The folder the action should deploy
          clean: true  # Automatically remove deleted files from deploy branch